#+AUTHOR: Gabriel Bronzatti Moro and Lucas M. Schnorr
#+TITLE: What is the libnina?
#+LATEX_HEADER: \usepackage[margin=2cm,a4paper]{geometry}
#+STARTUP: overview indent
#+TAGS: Gabriel(G) Lucas(L) noexport(n) deprecated(d)
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w!) | DONE(d!) CANCELLED(c!) DEFERRED(f!)
#+mode: org
#+coding: utf-8

Libnina is a library used to reduce the energy consumption of OpenMP
parallel applications. It has two operation modes: the HW counter
collection mode, used to characterize the application behavior; and
the CPU frequency control mode, where the reduction of energy
consumption becomes possible if memory-bound regions are set to
execute with a lower CPU frequency.

* Requirements

Libnina requires the =acpi-cpufreq= driver (instead of the =intel_pstate=)
because it dynamically changes the CPU frequency during runtime. The
governor must be the =userspace= that let's application-level calls
(with the appropriate permissions) to set the CPU frequency.  If you
are using Grub, you can disable =intel_pstate= by adding the following
line in the =/etc/default/grub= file.

#+BEGIN_EXAMPLE
GRUB_CMDLINE_LINUX_DEFAULT="intel_pstate=disable"
#+END_EXAMPLE

And then update =grub.cfg= by issuing the following command:

#+BEGIN_EXAMPLE
grub-mkconfig -o /boot/grub/grub.cfg
#+END_EXAMPLE

- [[https://unix.stackexchange.com/questions/121410/setting-cpu-governor-to-on-demand-or-conservative][Check here for further details about disabling =intel_pstate=]]. You
  can use the follow command line:

#+begin_src sh :results output :exports both
sudo cpupower frequency-info --governors
#+end_src

#+RESULTS:
: analyzing CPU 0:
: conservative ondemand userspace powersave performance

- In this case, it is possible to use this library, because the
  userspace governor exists.

- It's necessary the libpapi, libconfig, and libcpufreq
  installation. The follow command line may be used:

#+begin_src sh :results output :exports both
sudo apt install libpapi-dev -y
sudo apt install libconfig-dev -y
sudo apt install libcpufreq-dev -y
#+end_src

* Compilation

#+begin_src shell :results output  :exports both
cd src
make clean
make
#+end_src

#+RESULTS:
#+begin_example
rm -f   libnina.so  db.o libnina.o pomp2_lib.o pomp2_user_region_info.o pomp2_region_info.o opari2_ctc_parser.o modeling_papi.o db.d libnina.d pomp2_lib.d pomp2_user_region_info.d pomp2_region_info.d opari2_ctc_parser.d modeling_papi.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM modeling_papi.c >modeling_papi.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM opari2_ctc_parser.c >opari2_ctc_parser.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM pomp2_region_info.c >pomp2_region_info.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM pomp2_user_region_info.c >pomp2_user_region_info.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM pomp2_lib.c >pomp2_lib.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM libnina.c >libnina.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD -MM db.c >db.d
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o db.o db.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o libnina.o libnina.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o pomp2_lib.o pomp2_lib.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o pomp2_user_region_info.o pomp2_user_region_info.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o pomp2_region_info.o pomp2_region_info.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o opari2_ctc_parser.o opari2_ctc_parser.c
gcc  -Wno-unused-parameter -Wno-unused-variable -fPIC -Wall -Wextra -O3 -g -fopenmp  -DLIBNINA_THREAD   -c -o modeling_papi.o modeling_papi.c
gcc  -o libnina.so db.o libnina.o pomp2_lib.o pomp2_user_region_info.o pomp2_region_info.o opari2_ctc_parser.o modeling_papi.o  -shared -lcpufreq -lpapi -lconfig  
#+end_example

* Utilization
** Introduction

You need an OpenMP parallel application which has been instrumented
with [[http://score-p.org][opari2]] and dynamically linked against libnina (=-lnina=). Once this
is done, your application dynamic libraries should look like this
(example for the lulesh application); note the =libnina=, =libpapi=,
=libcpufreq=, and =libpthread=, linkage:

#+begin_src shell :results output :exports both
export LD_LIBRARY_PATH=$HOME/svn/gabriel/libnina/src/
cd $HOME/svn/gabriel/bitbucket.2/LULESH-2.0.3
ldd ./lulesh2.0
#+end_src

#+RESULTS:
#+begin_example
	linux-vdso.so.1 (0x00007ffcb916d000)
	libnina.so => /home/schnorr/svn/gabriel/libnina/src/libnina.so (0x00007fba021de000)
	libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fba01e5f000)
	libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fba01b14000)
	libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007fba018e5000)
	libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fba016ce000)
	libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fba014b0000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fba010fa000)
	libcpufreq.so.0 => /usr/lib/libcpufreq.so.0 (0x00007fba00ef4000)
	libpapi.so.5 => /usr/lib/x86_64-linux-gnu/libpapi.so.5 (0x00007fba00c9c000)
	libconfig.so.9 => /usr/lib/x86_64-linux-gnu/libconfig.so.9 (0x00007fba00a90000)
	/lib64/ld-linux-x86-64.so.2 (0x00007fba02601000)
	libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fba0088c000)
	libpfm.so.4 => /usr/lib/x86_64-linux-gnu/libpfm.so.4 (0x00007fba004e9000)
#+end_example

** Collection of HW counter

The configuration file =modeling-libnina.cfg= has this layout:

#+BEGIN_EXAMPLE
filename = "libnina"
papi: {
   counters = ( "PAPI_TOT_CYC", "PAPI_TOT_INS" );
}
#+END_EXAMPLE

- The =filename= option tells the name of the output file
- The =papi.counters= configuration has the list of HW counters to mesure

The configuration file should be placed where the application binary is. Then:

#+begin_src shell :results output :exports both
export OMP_PROC_BIND=true
export NINA_PAPI=true
sudo -E LD_LIBRARY_PATH=/home/schnorr/svn/gabriel/libnina/src/ ./lulesh2.0
#+end_src

The resulting file has this contents:

#+begin_src shell :results output :exports both
head ~/svn/gabriel/bitbucket.2/LULESH-2.0.3/libnina.csv
#+end_src

#+RESULTS:
#+begin_example
Line End Start Duration PAPI_TOT_CYC PAPI_TOT_INS
1142 1517398774.335444689 1517398774.335079193 0.000365496 950145 145240
310 1517398774.335609913 1517398774.335470438 0.000139475 483319 159781
549 1517398774.336974859 1517398774.335649729 0.001325130 12947445 19432417
593 1517398774.337459564 1517398774.336983919 0.000475645 5847025 2121763
1110 1517398774.337857485 1517398774.337780952 0.000076532 201614 142424
1037 1517398774.339713573 1517398774.337879181 0.001834393 15453679 20282904
810 1517398774.342328787 1517398774.339733362 0.002595425 31087347 39120306
997 1517398774.342815638 1517398774.342339277 0.000476360 5927115 2211136
1171 1517398774.343844414 1517398774.343704224 0.000140190 1200115 367658
#+end_example

Where
- =Line= is the starting line number of the parallel region
- =End= indicates when the last thread joined
- =Start= indicates when the first thread forked
- =Duration= indicates the duration of the parallel region (End - Start)
- A set of columns for each HW counter specified in the configuration file

** Control of CPU Frequency

Set the following environment variables:
- =NINA_CONFIG=, pointing to a configuration file detailed below
- =NINA_AMOUNT_OF_CPUS=, indicating the number of cores
- =NINA_TARGET_CPUS=, indicates a comma-separated list of cores
  identifiers (starting from zero)

Unset this environment variable
- =NINA_PAPI= should be =unset=, for example =unset NINA_PAPI=

The contents of the configuration file look like this:

#+begin_src shell :results output :exports both
cat $HOME/svn/gabriel/bitbucket.2/LULESH-2.0.3/LULESH_NINA.conf
#+end_src

#+RESULTS:
#+begin_example
310,900000,lulesh.cc
549,2800000,lulesh.cc
593,900000,lulesh.cc
810,2800000,lulesh.cc
997,900000,lulesh.cc
1037,2800000,lulesh.cc
1110,900000,lulesh.cc
1142,900000,lulesh.cc
1171,900000,lulesh.cc
1187,900000,lulesh.cc
1216,900000,lulesh.cc
1240,900000,lulesh.cc
1538,2800000,lulesh.cc
1612,900000,lulesh.cc
1646,2800000,lulesh.cc
1798,2800000,lulesh.cc
2051,900000,lulesh.cc
2058,2800000,lulesh.cc
2091,900000,lulesh.cc
2104,900000,lulesh.cc
2129,900000,lulesh.cc
2145,900000,lulesh.cc
2182,900000,lulesh.cc
2216,900000,lulesh.cc
2269,900000,lulesh.cc
2326,900000,lulesh.cc
2367,900000,lulesh.cc
2437,900000,lulesh.cc
2495,900000,lulesh.cc
2570,900000,lulesh.cc
#+end_example

- First column: is the starting line number of the parallel region
- Second: the frequency to be forced on that region
- Third: the name of the file for which the line number corresponds to

Then run:

#+begin_src shell :results output :exports both
unset NINA_PAPI
export NINA_CONFIG=LULESH_NINA.conf
export NINA_AMOUNT_OF_CPUS=4
export NINA_TARGET_CPUS=0,1,2,3
export OMP_PROC_BIND=true
sudo -E LD_LIBRARY_PATH=/home/schnorr/svn/gabriel/libnina/src/ ./lulesh2.0
#+end_src

Use the appropriate tool to mesure execution time and energy consumption.

** Additional control variables

These environment variables are also available:
- =NINA_LOG=, to obtain debug messages in stdout
- =NINA_DUMMY=, if set, do everything but does not change freq
* Misc

To monitor CPU power/energy using the Intel's RAPL interface, use:
https://github.com/kentcz/rapl-tools

#+begin_src shell :results output :exports both
sudo apt-get install msr-tools
sudo modprobe msr
sudo chmod o+rw /dev/cpu/0/msr
git clone https://github.com/kentcz/rapl-tools.git
cd rapl-tools
make
sudo apt-get install libcap2-bin
sudo setcap cap_sys_rawio+ep ./AppPowerMeter
sudo setcap cap_sys_rawio+ep ./PowerMonitor
#+end_src

Use the =AppPowerMeter= to mesure the 
